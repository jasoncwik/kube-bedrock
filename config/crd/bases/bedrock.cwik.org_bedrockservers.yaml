
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: bedrockservers.bedrock.cwik.org
spec:
  group: bedrock.cwik.org
  names:
    kind: BedrockServer
    listKind: BedrockServerList
    plural: bedrockservers
    singular: bedrockserver
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: BedrockServer is the Schema for the bedrockservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BedrockServerSpec defines the desired state of BedrockServer
            properties:
              image:
                description: The container image (version) to execute
                properties:
                  names:
                    description: Names by which this image is known. e.g. ["k8s.gcr.io/hyperkube:v1.0.7",
                      "dockerhub.io/google_containers/hyperkube:v1.0.7"]
                    items:
                      type: string
                    type: array
                  sizeBytes:
                    description: The size of the image in bytes.
                    format: int64
                    type: integer
                required:
                - names
                type: object
              name:
                description: Name of the server
                type: string
              run:
                description: Whether the server should be running. Can be used to
                  take servers offline. Setting this to False will scale the StatefulSet
                  to zero.
                type: boolean
              servicePort:
                description: Port to expose the service on. Default is 19132 for LoadBalancer
                  or ClusterIP and autoselected for NodePort.
                format: int32
                maximum: 65535
                minimum: 1
                type: integer
              serviceType:
                description: Type of Service to create to expose the server. Defaults
                  to ClusterIP, something that is not particularly useful. Recommend
                  using NodePort or LoadBalancer.
                enum:
                - ClusterIP
                - NodePort
                - LoadBalancer
                type: string
              worldsSize:
                anyOf:
                - type: integer
                - type: string
                description: Size of the PV to create. Defaults to 1Gi
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              worldsStorageClass:
                description: The name of the StorageClass to use for the PV to hold
                  the "Worlds" directory. This is where your server state is stored.
                  If not specified the default storage class will be used.
                type: string
            required:
            - image
            - run
            type: object
          status:
            description: BedrockServerStatus defines the observed state of BedrockServer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
